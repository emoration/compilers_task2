augmented_grammar = {
    "S'": [["Program"]],
    "Program": [["Program", "Function"],
                ["Program", "Declaration"],
                []],
    "Function": [["Type", "identifier", "(", "Arguments", ")", "Block"],
                 ["Type", "identifier", "(", ")", "Block"], ],
    "Arguments": [["Arguments", ",", "Argument"],
                  ["Argument"]],
    "Argument": [["Type", "identifier"]],
    "Block": [["{", "Declarations_or_statements", "}"]],
    "Declarations_or_statements": [["Declarations_or_statements", "Declaration"],
                                   ["Declarations_or_statements", "Statement"],
                                   []],
    "Declaration": [["Type", "Declaration_entity", ";"]],
    "Declaration_entity": [["Declaration_entity", ",", "Identifier_array"],
                           ["Declaration_entity", ",", "Identifier_array", "=", "Assignment_expression"],
                           ["Identifier_array"],
                           ["Identifier_array", "=", "Assignment_expression"]],
    "Identifier_array": [["Identifier_array", "[", "int_value", "]"],
                         ["identifier"]],
    "Type": [["Type", "*"],
             ["Basic_type"]],
    "Basic_type": [["float"],
                   ["int"],
                   ["bool"],
                   ["void"],
                   ["string"],
                   ["char"]],
    "Statement": [["Open_statement"],
                  ["Closed_statement"]],
    "Open_statement": [["if", "(", "Bool_expression", ")", "Statement"],
                       ["if", "(", "Bool_expression", ")", "Closed_statement", "else", "Open_statement"],
                       ["while", "(", "Bool_expression", ")", "Open_statement"],
                       ["for", "(", "Expression", ";", "Expression", ";", "Expression", ")", "Open_statement"],
                       ["for", "(", "Declaration", "Expression", ";", "Expression", ")", "Open_statement"]],
    "Closed_statement": [["if", "(", "Bool_expression", ")", "Closed_statement", "else", "Closed_statement"],
                         ["while", "(", "Bool_expression", ")", "Closed_statement"],
                         ["for", "(", "Expression", ";", "Expression", ";", "Expression", ")", "Closed_statement"],
                         ["for", "(", "Declaration", "Expression", ";", "Expression", ")", "Closed_statement"],
                         ["Block"],
                         ["Expression", ";"],
                         [";"],
                         ["do", "Statement", "while", "(", "Bool_expression", ")", ";"],
                         ["break", ";"],
                         ["continue", ";"],
                         ["goto", "identifier", ";"],
                         ["return", "Expression", ";"],
                         ["return", ";"]],
    "Expression": [["Separation_expression"]],
    "Separation_expression": [["Assignment_expression", ",", "Separation_expression"],
                              ["Assignment_expression"]],
    "Assignment_expression": [["Evaluation_expression", "=", "Assignment_expression"],
                              ["Evaluation_expression", "+=", "Assignment_expression"],
                              ["Evaluation_expression", "-=", "Assignment_expression"],
                              ["Evaluation_expression", "*=", "Assignment_expression"],
                              ["Evaluation_expression", "/=", "Assignment_expression"],
                              ["Evaluation_expression", "%=", "Assignment_expression"],
                              ["Evaluation_expression"]],
    "Evaluation_expression": [["Bool_expression"]],
    "Bool_expression": [["Bool_expression", "||", "Join_expression"],
                        ["Join_expression"]],
    "Join_expression": [["Join_expression", "&&", "Equality_expression"],
                        ["Equality_expression"]],
    "Equality_expression": [["Equality_expression", "==", "Relation_expression"],
                            ["Equality_expression", "!=", "Relation_expression"],
                            ["Relation_expression"]],
    "Relation_expression": [["Relation_expression", "<", "Arithmetic_expression"],
                            ["Relation_expression", "<=", "Arithmetic_expression"],
                            ["Relation_expression", ">=", "Arithmetic_expression"],
                            ["Relation_expression", ">", "Arithmetic_expression"],
                            ["Arithmetic_expression"]],
    "Arithmetic_expression": [["Arithmetic_expression", "+", "Term_expression"],
                              ["Arithmetic_expression", "-", "Term_expression"],
                              ["Term_expression"]],
    "Term_expression": [["Term_expression", "*", "Unary_expression"],
                        ["Term_expression", "/", "Unary_expression"],
                        ["Term_expression", "%", "Unary_expression"],
                        ["Unary_expression"]],
    "Unary_expression": [["!", "Unary_expression"],
                         ["-", "Unary_expression"],
                         ["+", "Unary_expression"],
                         ["*", "Unary_expression"],
                         ["&", "Unary_expression"],
                         ["Factor_expression"]],
    "Factor_expression": [["(", "Expression", ")"],
                          ["Location_expression"],
                          ["Function_expression"],
                          ["int_value"],
                          ["float_value"],
                          ["string_value"],
                          ["char_value"],
                          ["true"],
                          ["false"]],
    "Location_expression": [["Location_expression", "[", "Expression", "]"],
                            ["identifier"]],
    "Function_expression": [["identifier", "(", "Separation_expression", ")"],
                            ["identifier", "(", ")"]],
}
